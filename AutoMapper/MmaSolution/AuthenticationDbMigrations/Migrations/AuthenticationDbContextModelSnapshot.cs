// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MmaSolution.EntityFramework;

#nullable disable

namespace AuthenticationDbMigrations.Migrations
{
    [DbContext(typeof(AuthenticationDbContext))]
    partial class AuthenticationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppAccessControlEntryAppRole", b =>
                {
                    b.Property<Guid>("AccessControlEntriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppRolesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AccessControlEntriesId", "AppRolesId");

                    b.HasIndex("AppRolesId");

                    b.ToTable("AppRoleAccessControlEntries", "dbo");
                });

            modelBuilder.Entity("AppAccessControlEntryAppUser", b =>
                {
                    b.Property<Guid>("AccessControlEntriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AccessControlEntriesId", "AppUsersId");

                    b.HasIndex("AppUsersId");

                    b.ToTable("AppUserAccessControlEntries", "dbo");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppAccessControlEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PermissionPattern")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResourcePattern")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("ResourceId");

                    b.ToTable("AppAccessControlEntries", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1eaf731d-7d59-4b02-941f-ba25134c5f47"),
                            PermissionPattern = "*",
                            ResourceId = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61738"),
                            ResourcePattern = "*"
                        },
                        new
                        {
                            Id = new Guid("1eaf731d-7d59-4b02-941f-ba25134c5f48"),
                            PermissionPattern = "*",
                            ResourceId = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61739"),
                            ResourcePattern = "account/*"
                        },
                        new
                        {
                            Id = new Guid("1eaf731d-7d59-4b02-941f-ba25134c5f49"),
                            PermissionPattern = "*",
                            ResourceId = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61740"),
                            ResourcePattern = "localization/*"
                        },
                        new
                        {
                            Id = new Guid("1eaf731d-7d59-4b02-941f-ba25134c5f50"),
                            PermissionPattern = "Read",
                            ResourceId = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61740"),
                            ResourcePattern = "localization/*"
                        },
                        new
                        {
                            Id = new Guid("1eaf731d-7d59-4b02-941f-ba25134c5f51"),
                            PermissionPattern = "*",
                            ResourceId = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61741"),
                            ResourcePattern = "notification*"
                        },
                        new
                        {
                            Id = new Guid("1eaf731d-7d59-4b02-941f-ba25134c5f52"),
                            PermissionPattern = "Read,Update",
                            ResourceId = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61741"),
                            ResourcePattern = "notification*"
                        },
                        new
                        {
                            Id = new Guid("1eaf731d-7d59-4b02-941f-ba25134c5f53"),
                            PermissionPattern = "*",
                            ResourceId = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61744"),
                            ResourcePattern = "roles/*"
                        },
                        new
                        {
                            Id = new Guid("1eaf731d-7d59-4b02-941f-ba25134c5f54"),
                            PermissionPattern = "Read",
                            ResourceId = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61744"),
                            ResourcePattern = "roles/*"
                        },
                        new
                        {
                            Id = new Guid("1eaf731d-7d59-4b02-941f-ba25134c5f55"),
                            PermissionPattern = "*",
                            ResourceId = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61745"),
                            ResourcePattern = "syssettings/*"
                        },
                        new
                        {
                            Id = new Guid("1eaf731d-7d59-4b02-941f-ba25134c5f56"),
                            PermissionPattern = "Read",
                            ResourceId = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61745"),
                            ResourcePattern = "syssettings/*"
                        },
                        new
                        {
                            Id = new Guid("1eaf731d-7d59-4b02-941f-ba25134c5f57"),
                            PermissionPattern = "*",
                            ResourceId = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61746"),
                            ResourcePattern = "attachment/*"
                        },
                        new
                        {
                            Id = new Guid("1eaf731d-7d59-4b02-941f-ba25134c5f58"),
                            PermissionPattern = "Read",
                            ResourceId = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61746"),
                            ResourcePattern = "attachment/*"
                        });
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppFeature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasMaxLength(1500)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Scope")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("AppFeatures", "dbo");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppFeatureFlag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("FeatureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ScopeIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("IsDeleted");

                    b.ToTable("AppFeatureFlags", "dbo");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppRefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Hash")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("JwtId")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Token")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Hash");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("AppRefreshTokens", "dbo");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ResourceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("AppResources", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61738"),
                            Description = "Match all resources for admin",
                            ResourceType = 1,
                            Url = "*"
                        },
                        new
                        {
                            Id = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61739"),
                            ResourceType = 1,
                            Url = "api/account"
                        },
                        new
                        {
                            Id = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61740"),
                            ResourceType = 1,
                            Url = "api/localization"
                        },
                        new
                        {
                            Id = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61741"),
                            ResourceType = 1,
                            Url = "api/notifications"
                        },
                        new
                        {
                            Id = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61742"),
                            ResourceType = 1,
                            Url = "api/notification-statuses"
                        },
                        new
                        {
                            Id = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61743"),
                            ResourceType = 1,
                            Url = "api/notification-types"
                        },
                        new
                        {
                            Id = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61744"),
                            ResourceType = 1,
                            Url = "api/roles"
                        },
                        new
                        {
                            Id = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61745"),
                            ResourceType = 1,
                            Url = "api/syssettings"
                        },
                        new
                        {
                            Id = new Guid("f10e8ad9-8458-4a22-81be-908f6aa61746"),
                            ResourceType = 1,
                            Url = "api/attachment"
                        });
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AppRoles", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6d86280e-f691-4d17-a1c5-d12183f3fafa"),
                            ConcurrencyStamp = "e6c6df1d-e2f8-4e1f-9926-81ec842e7c84",
                            CreatedBy = new Guid("d3e96e09-d61d-4f99-aeb7-08dcbeb427c4"),
                            CreatedDate = new DateTime(2025, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("6d86280e-f691-4d17-a1c5-d12183f3fafb"),
                            ConcurrencyStamp = "ccce9a7d-1a2c-4faf-9e76-ec3740ef4f10",
                            CreatedBy = new Guid("d3e96e09-d61d-4f99-aeb7-08dcbeb427c4"),
                            CreatedDate = new DateTime(2025, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("RoleId");

                    b.ToTable("AppRoleClaims", "dbo");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("TwoFactorMethod")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AppUsers", "dbo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3e96e09-d61d-4f99-aeb7-08dcbeb427c4"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d4f06dc9-8e7f-46ed-85e7-c11f4545470c",
                            CreatedDate = new DateTime(2025, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@local.com",
                            EmailConfirmed = true,
                            FullName = "Super Admin",
                            IsDeleted = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "ADMIN@LOCAL.COM",
                            NormalizedUserName = "ADMIN@LOCAL.COM",
                            PasswordHash = "D01B2782115F692E0E0D52FC64EFE727F52DDA8CB03703898F1D182BD2517251-73073B1B83DFA10409FA469853F87F71",
                            PhoneNumber = "+201008983687",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "LR2TCJY3QTYEMAG27JLB57NGL6H27HTW",
                            TwoFactorEnabled = true,
                            TwoFactorMethod = 1,
                            UserName = "admin@local.com"
                        });
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ClaimValue")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("AppUserClaims", "dbo");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProviderDisplayName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("UserId");

                    b.ToTable("AppUserLogins", "dbo");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("AppUserRoles", "dbo");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("d3e96e09-d61d-4f99-aeb7-08dcbeb427c4"),
                            RoleId = new Guid("6d86280e-f691-4d17-a1c5-d12183f3fafa"),
                            CreatedDate = new DateTime(2025, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.HasIndex("IsDeleted");

                    b.ToTable("AppUserTokens", "dbo");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Views.VwAcl", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("FeatureIsEnabled")
                        .HasColumnType("bit");

                    b.Property<int?>("FeatureScope")
                        .HasColumnType("int");

                    b.Property<bool?>("FlagIsEnabled")
                        .HasColumnType("bit");

                    b.Property<Guid?>("FlagScopeIdentifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PermissionPattern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ResourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResourcePattern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.ToView("VW_ACLs", "dbo");
                });

            modelBuilder.Entity("AppAccessControlEntryAppRole", b =>
                {
                    b.HasOne("MmaSolution.Core.Database.Identity.AppAccessControlEntry", null)
                        .WithMany()
                        .HasForeignKey("AccessControlEntriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MmaSolution.Core.Database.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("AppRolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppAccessControlEntryAppUser", b =>
                {
                    b.HasOne("MmaSolution.Core.Database.Identity.AppAccessControlEntry", null)
                        .WithMany()
                        .HasForeignKey("AccessControlEntriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MmaSolution.Core.Database.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("AppUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppAccessControlEntry", b =>
                {
                    b.HasOne("MmaSolution.Core.Database.Identity.AppFeature", "Feature")
                        .WithMany("AccessControlEntries")
                        .HasForeignKey("FeatureId");

                    b.HasOne("MmaSolution.Core.Database.Identity.AppResource", "AppResource")
                        .WithMany("AccessControlEntries")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppResource");

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppFeatureFlag", b =>
                {
                    b.HasOne("MmaSolution.Core.Database.Identity.AppFeature", "Feature")
                        .WithMany("FeatureFlags")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Feature");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppRefreshToken", b =>
                {
                    b.HasOne("MmaSolution.Core.Database.Identity.AppUser", "AppUser")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppRoleClaim", b =>
                {
                    b.HasOne("MmaSolution.Core.Database.Identity.AppRole", "AppRole")
                        .WithMany("AppRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppUserClaim", b =>
                {
                    b.HasOne("MmaSolution.Core.Database.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppUserLogin", b =>
                {
                    b.HasOne("MmaSolution.Core.Database.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppUserRole", b =>
                {
                    b.HasOne("MmaSolution.Core.Database.Identity.AppRole", "AppRole")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MmaSolution.Core.Database.Identity.AppUser", "AppUser")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppUserToken", b =>
                {
                    b.HasOne("MmaSolution.Core.Database.Identity.AppUser", "AppUser")
                        .WithMany("UserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppFeature", b =>
                {
                    b.Navigation("AccessControlEntries");

                    b.Navigation("FeatureFlags");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppResource", b =>
                {
                    b.Navigation("AccessControlEntries");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppRole", b =>
                {
                    b.Navigation("AppRoleClaims");

                    b.Navigation("AppUserRoles");
                });

            modelBuilder.Entity("MmaSolution.Core.Database.Identity.AppUser", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("UserRoles");

                    b.Navigation("UserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
